Reverse Bits
Reverse a 32 bit given number.
Input:
The first line of input consists number of the test cases. Each test case contains a single 32 bit integer.

Output:
Print the reverse of integer.

Constraints:
1<=T<=100
0<=x<=4294967295

Example:

Input:
2
1
5

Output:
2147483648
2684354560

Explanation:
In first cases

00000000000000000000000000000001 =1
10000000000000000000000000000000 =2147483648


c code:
#include<stdio.h>

unsigned int reverseBits(unsigned int num)

{
	unsigned int count = sizeof(num) * 8 - 1;

	unsigned int reverse_num = num;
	

	num >>= 1; 
	
                            while(num)
	{

	reverse_num <<= 1;	 

	reverse_num |= num & 1;

	num >>= 1;
	
                 count--;
	
           }
	
                reverse_num <<= count;

	return reverse_num;

      }


int main()

            {   
                  int n,i;
unsigned int x;
                  
 scanf("%d",&n);
 for(i=0;i<n;i++)
	 
                       {
	    
                               scanf("%u",&x);
	
                                 printf("%u\n", reverseBits(x));

                               	     
	 }

                                                            return 0;

}

follow the link for more information
http://www.geeksforgeeks.org/write-an-efficient-c-program-to-reverse-bits-of-a-number/