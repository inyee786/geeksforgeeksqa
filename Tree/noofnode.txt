Write a program to Calculate Size of a tree


Algorithm:

size(tree)
1. If tree is empty then return 0
2. Else
     (a) Get the size of left subtree recursively  i.e., call 
          size( tree->left-subtree)
     (a) Get the size of right subtree recursively  i.e., call 
          size( tree->right-subtree)
     (c) Calculate size of the tree as following:
            tree_size  =  size(left-subtree) + size(right-
                               subtree) + 1
     (d) Return tree_size



c++ code

#include <stdio.h>
#include<stdlib.h>
struct node
{
int data;
struct node *left;
struct node *right;
};

struct node *newnode(int data)
{
	
	
struct node* newNode =(struct node*)malloc(sizeof(struct node));
newNode->data=data;
newNode->left=NULL;
newNode->right=NULL;
return (newNode);
}
void print(struct node *newnode)
{   if(newnode==NULL)
       return ;
	
printf("->%d",newnode->data);
print(newnode->left);
print(newnode->right);
}

int size(struct node *node)
{     int count=1;
  if(node==NULL)
  return 0;
  
  else{
           
            count+= size(node->left);
             count+=size(node->right);
            return count;
}

}

int main(void) {
struct node *head=newnode(5);
head->left=newnode(4);
head->right=newnode(3);
head->left->left=newnode(2);
head->left->right=newnode(1);
	
	printf("the element in the tree" );
	print(head);
	printf("\n size of the tree is %d",size(head));
	
	return 0;
}
